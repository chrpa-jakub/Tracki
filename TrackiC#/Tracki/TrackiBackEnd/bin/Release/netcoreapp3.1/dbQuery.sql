SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;
SET default_tablespace = '';
SET default_table_access_method = heap;
CREATE TABLE public."accountTypes" (
    "typeID" integer NOT NULL,
    "typeName" text NOT NULL
);
ALTER TABLE public."accountTypes" OWNER TO postgres;
CREATE TABLE public.artists (
    "artistID" integer NOT NULL,
    "artistName" text,
    "artistLocation" text,
    "userID" integer NOT NULL
);
ALTER TABLE public.artists OWNER TO postgres;
CREATE TABLE public."releaseTypes" (
    "releaseTypeID" integer NOT NULL,
    "releaseTypeName" text NOT NULL
);
ALTER TABLE public."releaseTypes" OWNER TO postgres;
CREATE TABLE public.releases (
    "releaseID" integer NOT NULL,
    "albumName" text NOT NULL,
    "artistID" integer NOT NULL,
    "yearOfRelease" integer NOT NULL,
    "releaseTypeID" integer NOT NULL
);
ALTER TABLE public.releases OWNER TO postgres;
CREATE TABLE public.songs (
    "songID" integer NOT NULL,
    "songName" text NOT NULL,
    "releaseID" integer NOT NULL,
    "songLocation" text NOT NULL
);
ALTER TABLE public.songs OWNER TO postgres;
CREATE TABLE public.users (
    "userID" integer NOT NULL,
    "userName" text,
    "accountTypeID" integer NOT NULL,
    "passwordHash" text
);
ALTER TABLE public.users OWNER TO postgres;
ALTER TABLE public.users ALTER COLUMN "accountTypeID" ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public."users_accountTypeID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
ALTER TABLE public.users ALTER COLUMN "userID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."users_userID_seq"
    START WITH 0
    INCREMENT BY 1
    MINVALUE 0
    NO MAXVALUE
    CACHE 1
);
COPY public."accountTypes" ("typeID", "typeName") FROM stdin;
COPY public.artists ("artistID", "artistName", "artistLocation", "userID") FROM stdin;
COPY public."releaseTypes" ("releaseTypeID", "releaseTypeName") FROM stdin;
COPY public.releases ("releaseID", "albumName", "artistID", "yearOfRelease", "releaseTypeID") FROM stdin;
COPY public.songs ("songID", "songName", "releaseID", "songLocation") FROM stdin;
COPY public.users ("userID", "userName", "accountTypeID", "passwordHash") FROM stdin;
SELECT pg_catalog.setval('public."users_accountTypeID_seq"', 1, false);
SELECT pg_catalog.setval('public."users_userID_seq"', 0, false);
ALTER TABLE ONLY public."accountTypes"
    ADD CONSTRAINT "accountTypes_pkey" PRIMARY KEY ("typeID");
ALTER TABLE ONLY public.releases
    ADD CONSTRAINT albums_pkey PRIMARY KEY ("releaseID");
ALTER TABLE ONLY public.artists
    ADD CONSTRAINT artists_pkey PRIMARY KEY ("artistID");
ALTER TABLE ONLY public."releaseTypes"
    ADD CONSTRAINT "releaseTypes_pkey" PRIMARY KEY ("releaseTypeID");
ALTER TABLE ONLY public.songs
    ADD CONSTRAINT songs_pkey PRIMARY KEY ("songID");
ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY ("userID");
CREATE INDEX "fki_FK_accountTypeID" ON public.users USING btree ("accountTypeID");
CREATE INDEX "fki_FK_albumID" ON public.songs USING btree ("releaseID");
CREATE INDEX "fki_FK_artistID" ON public.releases USING btree ("artistID");
CREATE INDEX "fki_FK_releaseTypeID" ON public.releases USING btree ("releaseTypeID");
CREATE INDEX "fki_FK_userID" ON public.artists USING btree ("userID");
ALTER TABLE ONLY public.users
    ADD CONSTRAINT "FK_accountTypeID" FOREIGN KEY ("accountTypeID") REFERENCES public."accountTypes"("typeID") NOT VALID;
ALTER TABLE ONLY public.releases
    ADD CONSTRAINT "FK_artistID" FOREIGN KEY ("artistID") REFERENCES public.artists("artistID") NOT VALID;
ALTER TABLE ONLY public.songs
    ADD CONSTRAINT "FK_releaseID" FOREIGN KEY ("releaseID") REFERENCES public.releases("releaseID") NOT VALID;
ALTER TABLE ONLY public.releases
    ADD CONSTRAINT "FK_releaseTypeID" FOREIGN KEY ("releaseTypeID") REFERENCES public."releaseTypes"("releaseTypeID") NOT VALID;
ALTER TABLE ONLY public.artists
    ADD CONSTRAINT "FK_userID" FOREIGN KEY ("userID") REFERENCES public.users("userID") NOT VALID;

